log_format pixou_open_log '$request_id!!!!!!open!!!!!!$msec!!!!!!$arg_list!!!!!!$arg_campaign!!!!!!$arg_subscriber!!!!!!$remote_addr!!!!!!$http_user_agent!!!!!!$http_accept_language';
log_format pixou_click_log  '$request_id!!!!!!click!!!!!!$msec!!!!!!$arg_list!!!!!!$arg_campaign!!!!!!$arg_subscriber!!!!!!$remote_addr!!!!!!$http_user_agent!!!!!!$http_accept_language!!!!!!$arg_uri';
log_format pixou_ses_delivery_log '$request_id!!!!!!delivery!!!!!!$msec!!!!!!$request_body';
log_format pixou_ses_bounce_log '$request_id!!!!!!bounce!!!!!!$msec!!!!!!$request_body';
log_format pixou_ses_complaint_log '$request_id!!!!!!complaint!!!!!!$msec!!!!!!$request_body';
log_format pixou_ses_any_log '$request_id!!!!!!any!!!!!!$msec!!!!!!$request_body';


# Allowed source SNS IP ranges
geo $is_sns {
    default 0;
    # US-EAST-1 SNS IPs
    207.171.167.101  1;
    207.171.167.25   1;
    207.171.167.26   1;
    207.171.172.6    1;
    54.239.98.0/24   1;
    54.240.217.16/29 1;
    54.240.217.8/29  1;
    54.240.217.64/28 1;
    54.240.217.80/29 1;
    72.21.196.64/29  1;
    72.21.198.64/29  1;
    72.21.198.72     1;
    72.21.217.0/24   1;
}

# Say true for localhost
geo $is_localhost {
    default 0;
    127.0.0.0/24 1;
}


upstream minimailapp {
    server 127.0.0.1:9999;
    #sticky cookie srv_id expires=1h domain=minimail.fullweb.io path=/;
}

server {
    server_name localhost;
    listen 8088;

    location /log_post_response {
        # turn off logging here to avoid double logging
        access_log off;
        add_header 'Content-Type' 'text/plain';
        return 200 "ok";
    }
}

server {
    server_name minimail.fullweb.io;
    listen 80;

    listen 443 ssl;
    ssl_certificate     /etc/letsencrypt/live/minimail.fullweb.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/minimail.fullweb.io/privkey.pem;

    # SSL conf
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    #ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    keepalive_timeout 5;
    charset utf8;
    server_tokens off;
    #default_type html;

    root /var/www/minimail.fullweb.io;
    index index.html index.htm;

    gzip            on;
    gzip_disable    msie6;
    gzip_vary       on;
    gzip_comp_level 6;
    gzip_types      application/xml application/json application/javascript
                  text/plain text/xml text/css
                  text/comma-separated-values
                  text/javascript application/x-javascript
                  application/atom+xml;

    access_log /var/log/nginx/minimail.axx.log;
    error_log /var/log/nginx/minimail.err.log;

    client_max_body_size 50M;

    # pixou tracking for open and click

    location /pixou/open {
        access_log /var/log/nginx/minimail.pixou.axx.log pixou_open_log;
        add_header X-Request-ID $request_id;
        empty_gif;
    }

    location /pixou/click {
        access_log /var/log/nginx/minimail.pixou.axx.log pixou_click_log;
        add_header X-Request-ID $request_id;
        set_decode_base64 $dest $arg_uri;
        return 302 $dest;
    }

    # AWS SES callback, called by AWS SNS

    location = /callbacks/ses/delivery {
        access_log /var/log/nginx/minimail.pixou.axx.log pixou_ses_delivery_log;
        proxy_pass http://localhost:8088/log_post_response;
    }

    location = /callbacks/ses/bounce {
        access_log /var/log/nginx/minimail.pixou.axx.log pixou_ses_bounce_log;
        proxy_pass http://localhost:8088/log_post_response;

    }

    location = /callbacks/ses/complaint {
        access_log /var/log/nginx/minimail.pixou.axx.log pixou_ses_complaint_log;
        proxy_pass http://localhost:8088/log_post_response;
    }

    location /callbacks {
         access_log /var/log/nginx/minimail.pixou.ses.any.axx.log pixou_ses_any_log;
         proxy_pass http://localhost:8088/log_post_response;
    }

    # Expire rules for static content

    # No default expire rule. This config mirrors that of apache as outlined in the
    # html5-boilerplate .htaccess file. However, nginx applies rules by location,
    # the apache rules are defined by type. A consequence of this difference is that
    # if you use no file extension in the url and serve html, with apache you get an
    # expire time of 0s, with nginx you'd get an expire header of one month in the
    # future (if the default expire rule is 1 month). Therefore, do not use a
    # default expire rule with nginx unless your site is completely static

    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires -1;
    }

    # Feed
    location ~* \.(?:rss|atom)$ {
        expires 1h;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;
    }

    location ~ /\.git {
        deny all;
        return 404;
    }

    location @django_app {
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://minimailapp;
    }

    location /static {
        try_files $uri $uri.html $uri/ =404;
    }

    location /docs {
        try_files $uri $uri.html $uri/ =404;
    }

    location / {
      auth_basic "Restricted Content";
      auth_basic_user_file /etc/nginx/.htpasswd;
      try_files $uri @django_app;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /var/www/minimail.fullweb.io/static;
      internal;
    }
}


server {
    server_name www.minimail.im minimail.im;
    listen 80;
    return 301 https://minimail.im$request_uri;
}


server {
    server_name www.minimail.fullweb.io;
    listen 80;
    return 301 https://minimail.fullweb.io$request_uri;
}
