log_format pixou_open_log '$msec!!!!!!$arg_list!!!!!!$arg_campaign!!!!!!$arg_subscriber!!!!!!$remote_addr!!!!!!$http_user_agent!!!!!!$http_accept_language';
log_format pixou_click_log '$msec!!!!!!$arg_list!!!!!!$arg_campaign!!!!!!$arg_subscriber!!!!!!$remote_addr!!!!!!$http_user_agent!!!!!!$http_accept_language!!!!!!$arg_uri';
log_format pixou_ses_log '$msec!!!!!!$request_body';

upstream minimailapp {
	server 127.0.0.1:9999;
	#sticky cookie srv_id expires=1h domain=minimail.fullweb.io path=/;
}

server {
    server_name minimail.fullweb.io;
    listen 443;

    ssl_certificate     /etc/letsencrypt/live/minimail.fullweb.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/minimail.fullweb.io/privkey.pem;

    # SSL conf
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_prefer_server_ciphers on;
    ssl_ciphers EECDH+CHACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    #ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    client_max_body_size 5M;
    keepalive_timeout 5;
    charset utf8;
    server_tokens off;
    #default_type html;

    root /var/www/minimail.fullweb.io;
    index index.html index.htm;

    gzip            on;
    gzip_disable    msie6;
    gzip_vary       on;
    gzip_comp_level 6;
    gzip_types      application/xml application/json application/javascript
                  text/plain text/xml text/css
                  text/comma-separated-values
                  text/javascript application/x-javascript
                  application/atom+xml;

    access_log /var/log/nginx/minimail.axx.log;
    error_log /var/log/nginx/minimail.err.log;

    # Expire rules for static content

    # No default expire rule. This config mirrors that of apache as outlined in the
    # html5-boilerplate .htaccess file. However, nginx applies rules by location,
    # the apache rules are defined by type. A consequence of this difference is that
    # if you use no file extension in the url and serve html, with apache you get an
    # expire time of 0s, with nginx you'd get an expire header of one month in the
    # future (if the default expire rule is 1 month). Therefore, do not use a
    # default expire rule with nginx unless your site is completely static

	# pixou white pixel
	location /pixou/open {
		access_log /var/log/nginx/minimail.pixou.open.axx.log pixou_open_log;
		return 204;
	}

	location /pixou/click {
		access_log /var/log/nginx/minimail.pixou.click.axx.log pixou_click_log;
		return 204;
	}

	location = /post_response {
        # turn off logging here to avoid double logging
        access_log off;
        return 204;
    }

	location /callbacks/ses/delivery {
        access_log /var/log/nginx/minimail.pixou.ses.delivery.axx.log pixou_ses_log;
        proxy_pass http://minimail.fullweb.io/post_response;
    }

    location /callbacks/ses/bounce {
        access_log /var/log/nginx/minimail.pixou.ses.bounce.axx.log pixou_ses_log;
        proxy_pass http://minimail.fullweb.io/post_response;
    }

    location /callbacks/ses/complaint {
        access_log /var/log/nginx/minimail.pixou.ses.complaint.axx.log pixou_ses_log;
        proxy_pass http://minimail.fullweb.io/post_response;
    }

    # cache.appcache, your document html and data
    location ~* \.(?:manifest|appcache|html?|xml|json)$ {
        expires -1;
    }

    # Feed
    location ~* \.(?:rss|atom)$ {
        expires 1h;
    }

    # Media: images, icons, video, audio, HTC
    location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
        expires 1M;
        access_log off;
        add_header Cache-Control "public";
    }

    # CSS and Javascript
    location ~* \.(?:css|js)$ {
        expires 1y;
        access_log off;
    }

    location ~ /\.git {
        deny all;
        return 404;
    }

    location @django_app {
        proxy_set_header Host $host;
        proxy_redirect off;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass http://minimailapp;
    }

    location /static {
        try_files $uri $uri.html $uri/ =404;
    }

    location /docs {
        try_files $uri $uri.html $uri/ =404;
    }

    location / {
      try_files $uri @django_app;
    }

    error_page 500 502 503 504 /500.html;
    location = /500.html {
      root /var/www/minimail.fullweb.io/static;
      internal;
    }
}


server {
    server_name minimail.fullweb.io;
    listen 80;

	location = /post_response {
        # turn off logging here to avoid double logging
        access_log off;
        return 204;
    }

	location ^~ /callbacks {
		access_log /var/log/nginx/minimail.axx.log;
		error_log /var/log/nginx/minimail.err.log;
		proxy_pass http://minimail.fullweb.io/post_response;
	}

	location / {
		return 301 https://$server_name$request_uri;
	}
}

server {
    server_name www.minimail.fullweb.io;
    listen 80;
    return 301 https://minimail.fullweb.io$request_uri;
}
